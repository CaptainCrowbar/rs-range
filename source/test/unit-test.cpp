// This file is generated by the rs-update-tests script

#include "rs-unit-test.hpp"

int main(int argc, char** argv) {

    RS::UnitTest::begin_tests(argc, argv);

    // core-test.cpp
    UNIT_TEST(rs_range_core_infrastructure)
    UNIT_TEST(rs_range_core_output)
    UNIT_TEST(rs_range_core_passthrough)
    UNIT_TEST(rs_range_core_collect)
    UNIT_TEST(rs_range_core_each)
    UNIT_TEST(rs_range_core_combinator)

    // aggregation-test.cpp
    UNIT_TEST(rs_range_aggregation_adjacent_difference)
    UNIT_TEST(rs_range_aggregation_census)
    UNIT_TEST(rs_range_aggregation_collect_groups)
    UNIT_TEST(rs_range_aggregation_group)
    UNIT_TEST(rs_range_aggregation_partial_sum)

    // combination-test.cpp
    UNIT_TEST(rs_range_combination_compare)
    UNIT_TEST(rs_range_combination_concat)
    UNIT_TEST(rs_range_combination_inner_product)
    UNIT_TEST(rs_range_combination_interleave)
    UNIT_TEST(rs_range_combination_merge)
    UNIT_TEST(rs_range_combination_outer_product)
    UNIT_TEST(rs_range_combination_set_difference)
    UNIT_TEST(rs_range_combination_set_difference_from)
    UNIT_TEST(rs_range_combination_set_intersection)
    UNIT_TEST(rs_range_combination_set_symmetric_difference)
    UNIT_TEST(rs_range_combination_set_union)
    UNIT_TEST(rs_range_combination_zip)

    // expansion-test.cpp
    UNIT_TEST(rs_range_expansion_combinations)
    UNIT_TEST(rs_range_expansion_flat_map)
    UNIT_TEST(rs_range_expansion_flatten)
    UNIT_TEST(rs_range_expansion_insert_algorithms)
    UNIT_TEST(rs_range_expansion_permutations)
    UNIT_TEST(rs_range_expansion_repeat)
    UNIT_TEST(rs_range_expansion_subsets)

    // generation-test.cpp
    UNIT_TEST(rs_range_generation_epsilon)
    UNIT_TEST(rs_range_generation_fill)
    UNIT_TEST(rs_range_generation_generate)
    UNIT_TEST(rs_range_generation_iota)
    UNIT_TEST(rs_range_generation_random)
    UNIT_TEST(rs_range_generation_single)

    // permutation-test.cpp
    UNIT_TEST(rs_range_permutation_permutations)
    UNIT_TEST(rs_range_permutation_reverse)
    UNIT_TEST(rs_range_permutation_shuffle)
    UNIT_TEST(rs_range_permutation_sort)

    // reduction-test.cpp
    UNIT_TEST(rs_range_reduction_all_any_none)
    UNIT_TEST(rs_range_reduction_count)
    UNIT_TEST(rs_range_reduction_fold)
    UNIT_TEST(rs_range_reduction_is_empty)
    UNIT_TEST(rs_range_reduction_is_sorted)
    UNIT_TEST(rs_range_reduction_min_max)
    UNIT_TEST(rs_range_reduction_reduce)
    UNIT_TEST(rs_range_reduction_sum_product)

    // selection-test.cpp
    UNIT_TEST(rs_range_selection_before_etc)
    UNIT_TEST(rs_range_selection_filter)
    UNIT_TEST(rs_range_selection_not_null)
    UNIT_TEST(rs_range_selection_remove)
    UNIT_TEST(rs_range_selection_sample)
    UNIT_TEST(rs_range_selection_skip_take)
    UNIT_TEST(rs_range_selection_stride)
    UNIT_TEST(rs_range_selection_unique)

    // transformation-test.cpp
    UNIT_TEST(rs_range_transformation_pointer_casts)
    UNIT_TEST(rs_range_transformation_construct)
    UNIT_TEST(rs_range_transformation_convert)
    UNIT_TEST(rs_range_transformation_dereference)
    UNIT_TEST(rs_range_transformation_indexed)
    UNIT_TEST(rs_range_transformation_iterators)
    UNIT_TEST(rs_range_transformation_keys_values)
    UNIT_TEST(rs_range_transformation_map)
    UNIT_TEST(rs_range_transformation_map_head_tail)
    UNIT_TEST(rs_range_transformation_map_if)
    UNIT_TEST(rs_range_transformation_replace)
    UNIT_TEST(rs_range_transformation_swap_pairs)

    // version-test.cpp
    UNIT_TEST(rs_range_version)

    // unit-test.cpp

    return RS::UnitTest::end_tests();

}
